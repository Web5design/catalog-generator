// Generated by CoffeeScript 1.4.0
(function() {
  var catalogGenerator,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  catalogGenerator = (function() {

    catalogGenerator.prototype.data = [];

    catalogGenerator.prototype.fields = {};

    function catalogGenerator() {
      this.addDataset = __bind(this.addDataset, this);

      var _this = this;
      $('#add_dataset').click(this.addDataset);
      $('.remove_dataset').live('click', this.removeDataset);
      $('.add_multiple').live('click', this.addMultiple);
      $('#title').live('change', this.renameDataset);
      $.ajax('schema.yml', {
        success: function(data) {
          _this.fields = jsyaml.load(data);
          return _this.addDataset();
        }
      });
    }

    catalogGenerator.prototype.addDataset = function() {
      $('#datasets').append($('#dataset_template').html());
      return this.renderFields($('.dataset').last());
    };

    catalogGenerator.prototype.removeDataset = function() {
      if (confirm("Are you sure?")) {
        return $(this).parent().remove();
      }
    };

    catalogGenerator.prototype.renameDataset = function() {
      return $(this).parent().parent().parent().parent().children('h3').html($(this).val());
    };

    catalogGenerator.prototype.renderFields = function(dataset) {
      var _this = this;
      return $.each(this.fields.basic, function(k, field) {
        var input;
        field = _this.parseType(field);
        input = _this.getInput(field);
        return $(dataset).children('.fields').append(Mustache.render($('#field_template').html(), field, {
          input: input
        }));
      });
    };

    catalogGenerator.prototype.parseType = function(field) {
      if (field.type == null) {
        field.type = "text";
      }
      return field;
    };

    catalogGenerator.prototype.getInput = function(field) {
      return $('#' + field.type + '_template').html();
    };

    catalogGenerator.prototype.addMultiple = function() {
      return $(this).siblings('input').last().clone().appendTo($(this).parent());
    };

    catalogGenerator.prototype.getArray = function() {
      var _this = this;
      this.data = [];
      $.each($('.dataset'), function(k, dataset) {
        var values;
        values = {};
        $.each(_this.fields.basic, function(k, field) {
          var key, value;
          key = field.json;
          value = $(dataset).find('#' + field.json).val();
          return values[key] = value;
        });
        return _this.data.push(values);
      });
      return this.data;
    };

    catalogGenerator.prototype.getJSON = function() {
      return JSON.stringify(this.getArray());
    };

    return catalogGenerator;

  })();

  jQuery(document).ready(function($) {
    return window.catalogGenerator = new catalogGenerator();
  });

}).call(this);
