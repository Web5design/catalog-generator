// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Application.Views.UploadView = (function(_super) {

    __extends(UploadView, _super);

    function UploadView() {
      return UploadView.__super__.constructor.apply(this, arguments);
    }

    UploadView.prototype.el = '#main';

    UploadView.prototype.template = $('#upload_template').html();

    UploadView.prototype.events = {
      "change input": "selectFile",
      "dragover #drop_zone": "dragOver",
      "dragleave #drop_zone": "dragOut",
      "drop #drop_zone": "drop"
    };

    UploadView.prototype.initialize = function() {
      jQuery.event.props.push('dataTransfer');
      if (!this.canHazFile()) {
        return this.template = '<p>Your browser is not supported. Please consider <a href="http://browsehappy.com/">upgrading</a>.';
      }
    };

    UploadView.prototype.render = function() {
      var compiled;
      compiled = _.template(this.template);
      return this.$el.html(compiled());
    };

    UploadView.prototype.canHazFile = function() {
      if (!(window.File != null) || !(window.FileReader != null) || !(window.FileList != null) || !(window.Blob != null)) {
        return false;
      }
      return true;
    };

    UploadView.prototype.selectFile = function(e) {
      return this.read(e.target.files[0]);
    };

    UploadView.prototype.dragOver = function(e) {
      e.stopPropagation();
      e.preventDefault();
      e.dataTransfer.dropEffect = 'copy';
      $('#drop_zone').addClass('hover');
      return false;
    };

    UploadView.prototype.dragOut = function(e) {
      e.stopPropagation();
      e.preventDefault();
      $('#drop_zone').removeClass('hover');
      return false;
    };

    UploadView.prototype.drop = function(e) {
      e.stopPropagation();
      e.preventDefault();
      this.read(e.dataTransfer.files[0]);
      $('#drop_zone').removeClass('hover');
      return false;
    };

    UploadView.prototype.read = function(file) {
      var reader,
        _this = this;
      reader = new FileReader();
      reader.onload = function(file) {
        var data, view;
        data = _this.parseFile(file.target.result);
        view = new Application.Views.ImportView({
          collection: data
        });
        view.render();
        return Application.Router.navigate('import');
      };
      return reader.readAsText(file);
    };

    UploadView.prototype.parseFile = function(file) {
      var data;
      try {
        return data = JSON.parse(file);
      } catch (error) {
        return data = $.csv.toObjects(file);
      } finally {
        return data;
      }
    };

    return UploadView;

  })(Backbone.View);

}).call(this);
